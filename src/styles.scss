
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$codely-text-primary: mat.define-palette(mat.$indigo-palette);
$codely-text-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$codely-text-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$codely-text-theme: mat.define-light-theme((
  color: (
    primary: $codely-text-primary,
    accent: $codely-text-accent,
    warn: $codely-text-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($codely-text-theme);

@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: "Objectivity";
  src: url("/assets/fonts/Objectivity-Regular.otf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "Objectivity";
  src: url("/assets/fonts/Objectivity-Bold.otf") format("truetype");
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: "Objectivity";
  src: url("/assets/fonts/Objectivity-Medium.otf") format("truetype");
  font-weight: 600;
  font-style: normal;
}

body,
.ql-editor {
  font-family: "Objectivity", sans-serif;
}

body {
  background: linear-gradient(45deg, #000027, #000000, #0b0f49);
  background-size: 600% 100%;
  animation: gradient 30s linear infinite;
  animation-direction: alternate;
}

.typed {
  border-right: 3px solid;
  width: 0;
  animation: typing 1.5s steps(30, end) forwards, blinking 1s infinite;
}

@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes blinking {
  0% {
    border-right-color: transparent;
  }
  50% {
    border-right-color: #3DBAF0;
  }
  100% {
    border-right-color: transparent;
  }
}

input:checked ~ .dot {
  transform: translateX(100%);
  background-color: #34AFE4;
}
